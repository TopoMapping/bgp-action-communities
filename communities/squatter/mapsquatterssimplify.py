import argparse
import pickle

# Global variables
all_ases_from_communities_set = set()
all_ases_from_communities_dict = {}
as_counter_dict = {}


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument('-i', '--input', dest='input', help="Pickle file generated by search siblings.", required=True)
    parser.add_argument('-o', '--output', dest='output', help="Pickle with simplification calculated", required=True)

    # env variables
    args = parser.parse_args()
    siblings_pkl = args.input
    output = args.output

    # load the pickle structure
    with open(siblings_pkl, "rb") as file_to_process:
        siblings, as_counter_dict = pickle.load(file_to_process)

    # create a sibling
    siblings_set = set()

    for key in siblings:
        siblings_set.add(key[1:])

    # Save the structures
    arq = open(output, "wb")
    # all_ases_from_communities_announces_dict = [all keys for the ASN from Community, number occur of each ASN]
    # global_counting = count the global occurrence of an ASN among all keys
    pickle.dump(siblings_set, arq)
    arq.close()
